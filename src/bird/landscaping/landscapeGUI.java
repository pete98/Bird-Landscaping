/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package bird.landscaping;
import java.io.IOException;
import java.sql.*;

import java.net.URL;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author prana
 */
public class landscapeGUI extends javax.swing.JFrame {

    DefaultListModel<Customer> customerList = new DefaultListModel();
    private final double GRASS_PER_SQFT = 5.00;
    private final double GRAVEL_PER_SQFT = 2.00;

    /**
     * Creates new form landscapeGUI
     */
    public landscapeGUI() {
        initComponents();

        // ceter the form
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btgYardType = new javax.swing.ButtonGroup();
        tabMain = new javax.swing.JTabbedPane();
        pnlWelcome = new javax.swing.JPanel();
        btnReset = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        rdoGravel = new javax.swing.JRadioButton();
        rdoGrass = new javax.swing.JRadioButton();
        lblImage = new javax.swing.JLabel();
        lblCompanyName = new javax.swing.JLabel();
        lblInstruction2 = new javax.swing.JLabel();
        lblGrassCost = new javax.swing.JLabel();
        lblGravelCost = new javax.swing.JLabel();
        pnlInformation = new javax.swing.JPanel();
        lblOrderSummary = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        scrOrderSummary = new javax.swing.JScrollPane();
        txaOrderInfo = new javax.swing.JTextArea();
        lblAddress = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        btnSubmitOrder = new javax.swing.JButton();
        txtName = new javax.swing.JTextField();
        lblInstruction3 = new javax.swing.JLabel();
        lblWidth = new javax.swing.JLabel();
        txtWidth = new javax.swing.JTextField();
        txtLength = new javax.swing.JTextField();
        lblLength = new javax.swing.JLabel();
        lblCompanyName1 = new javax.swing.JLabel();
        btnCalculate = new javax.swing.JButton();
        lblInstruction1 = new javax.swing.JLabel();
        pnlCustomerList = new javax.swing.JPanel();
        lblCompanyName2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstCustomers = new javax.swing.JList<>();
        btnDelete = new javax.swing.JButton();
        btnLoad = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        txaCustomerInfo = new javax.swing.JTextArea();
        mnbMain = new javax.swing.JMenuBar();
        mnuFile = new javax.swing.JMenu();
        mniExit = new javax.swing.JMenuItem();
        mnuOrder = new javax.swing.JMenu();
        mniSubmitOrder = new javax.swing.JMenuItem();
        mniReset = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Pranav Sailor Landscaping");

        btnReset.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnReset.setText("Reset");
        btnReset.setToolTipText("");
        btnReset.setPreferredSize(new java.awt.Dimension(120, 31));
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnNext.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnNext.setText("Next");
        btnNext.setToolTipText("");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btgYardType.add(rdoGravel);
        rdoGravel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rdoGravel.setText("Gravel");
        rdoGravel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoGravelActionPerformed(evt);
            }
        });

        btgYardType.add(rdoGrass);
        rdoGrass.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rdoGrass.setText("Grass");
        rdoGrass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoGrassActionPerformed(evt);
            }
        });

        lblImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bird/landscaping/dirt1.png"))); // NOI18N

        lblCompanyName.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        lblCompanyName.setText("Pranav Sailor Landscapes");

        lblInstruction2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblInstruction2.setText("Would you like a grass or gravel yard ?");

        lblGrassCost.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblGrassCost.setText("$5 per sqft");

        lblGravelCost.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblGravelCost.setText("$2 per sqft");

        javax.swing.GroupLayout pnlWelcomeLayout = new javax.swing.GroupLayout(pnlWelcome);
        pnlWelcome.setLayout(pnlWelcomeLayout);
        pnlWelcomeLayout.setHorizontalGroup(
            pnlWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlWelcomeLayout.createSequentialGroup()
                .addContainerGap(187, Short.MAX_VALUE)
                .addGroup(pnlWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pnlWelcomeLayout.createSequentialGroup()
                            .addGap(6, 6, 6)
                            .addGroup(pnlWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblInstruction2)
                                .addGroup(pnlWelcomeLayout.createSequentialGroup()
                                    .addGap(79, 79, 79)
                                    .addGroup(pnlWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(lblGrassCost, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(rdoGrass, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(67, 67, 67)
                                    .addGroup(pnlWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(rdoGravel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblGravelCost))))
                            .addGap(192, 192, 192))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlWelcomeLayout.createSequentialGroup()
                            .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(43, 43, 43)
                            .addGroup(pnlWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btnReset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(43, 43, 43)))
                    .addGroup(pnlWelcomeLayout.createSequentialGroup()
                        .addComponent(lblCompanyName)
                        .addGap(167, 167, 167))))
        );
        pnlWelcomeLayout.setVerticalGroup(
            pnlWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlWelcomeLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(lblCompanyName)
                .addGap(32, 32, 32)
                .addComponent(lblInstruction2)
                .addGap(18, 18, 18)
                .addGroup(pnlWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdoGravel)
                    .addComponent(rdoGrass))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGrassCost)
                    .addComponent(lblGravelCost))
                .addGroup(pnlWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlWelcomeLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(30, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlWelcomeLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnNext)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(107, 107, 107))))
        );

        tabMain.addTab("Welcome", pnlWelcome);

        lblOrderSummary.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblOrderSummary.setText("Order Summary");

        lblName.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblName.setText("Name:");

        txaOrderInfo.setColumns(18);
        txaOrderInfo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txaOrderInfo.setRows(5);
        scrOrderSummary.setViewportView(txaOrderInfo);

        lblAddress.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblAddress.setText("Address:");

        txtAddress.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtAddress.setNextFocusableComponent(txtWidth);

        btnSubmitOrder.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnSubmitOrder.setText("Submit Order");
        btnSubmitOrder.setToolTipText("");
        btnSubmitOrder.setNextFocusableComponent(txtName);
        btnSubmitOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitOrderActionPerformed(evt);
            }
        });

        txtName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtName.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtName.setNextFocusableComponent(txtAddress);

        lblInstruction3.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblInstruction3.setText("Please enter your information:");

        lblWidth.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblWidth.setText("Width(ft):");

        txtWidth.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtWidth.setNextFocusableComponent(txtLength);

        txtLength.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtLength.setNextFocusableComponent(btnCalculate);

        lblLength.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblLength.setText("length(ft):");

        lblCompanyName1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        lblCompanyName1.setText("Pranav Sailor Landscapes");

        btnCalculate.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnCalculate.setText("Calculate");
        btnCalculate.setToolTipText("");
        btnCalculate.setNextFocusableComponent(btnSubmitOrder);
        btnCalculate.setPreferredSize(new java.awt.Dimension(120, 31));
        btnCalculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalculateActionPerformed(evt);
            }
        });

        lblInstruction1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblInstruction1.setText("Enter the length and width of your yard:");

        javax.swing.GroupLayout pnlInformationLayout = new javax.swing.GroupLayout(pnlInformation);
        pnlInformation.setLayout(pnlInformationLayout);
        pnlInformationLayout.setHorizontalGroup(
            pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInformationLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlInformationLayout.createSequentialGroup()
                        .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlInformationLayout.createSequentialGroup()
                                    .addComponent(lblName)
                                    .addGap(24, 24, 24)
                                    .addComponent(txtName))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlInformationLayout.createSequentialGroup()
                                    .addComponent(lblAddress)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(lblInstruction1, javax.swing.GroupLayout.Alignment.LEADING))
                            .addGroup(pnlInformationLayout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnCalculate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(pnlInformationLayout.createSequentialGroup()
                                        .addComponent(lblWidth)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtWidth, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(lblLength)))
                                .addGap(37, 37, 37)
                                .addComponent(txtLength, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlInformationLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(scrOrderSummary, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlInformationLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnSubmitOrder)
                                .addGap(74, 74, 74)))
                        .addGap(23, 23, 23))
                    .addGroup(pnlInformationLayout.createSequentialGroup()
                        .addComponent(lblInstruction3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblOrderSummary)
                        .addGap(87, 87, 87))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlInformationLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblCompanyName1)
                .addGap(182, 182, 182))
        );
        pnlInformationLayout.setVerticalGroup(
            pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInformationLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(lblCompanyName1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblInstruction3)
                    .addComponent(lblOrderSummary))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlInformationLayout.createSequentialGroup()
                        .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblName)
                            .addComponent(txtName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAddress))
                        .addGap(10, 10, 10)
                        .addComponent(lblInstruction1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblWidth)
                            .addComponent(txtWidth)
                            .addComponent(lblLength)
                            .addComponent(txtLength)))
                    .addComponent(scrOrderSummary))
                .addGap(18, 18, 18)
                .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCalculate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSubmitOrder))
                .addGap(81, 81, 81))
        );

        tabMain.addTab("Information", pnlInformation);

        lblCompanyName2.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        lblCompanyName2.setText("Pranav Sailor Landscapes");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setText("Customer List");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel2.setText("Customer Details");

        lstCustomers.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lstCustomers.setModel(customerList);
        lstCustomers.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstCustomersValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstCustomers);

        btnDelete.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnDelete.setText("Delete Customer");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnLoad.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnLoad.setText("Load List");
        btnLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadActionPerformed(evt);
            }
        });

        txaCustomerInfo.setColumns(20);
        txaCustomerInfo.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        txaCustomerInfo.setRows(5);
        jScrollPane3.setViewportView(txaCustomerInfo);

        javax.swing.GroupLayout pnlCustomerListLayout = new javax.swing.GroupLayout(pnlCustomerList);
        pnlCustomerList.setLayout(pnlCustomerListLayout);
        pnlCustomerListLayout.setHorizontalGroup(
            pnlCustomerListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCustomerListLayout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(66, Short.MAX_VALUE))
            .addGroup(pnlCustomerListLayout.createSequentialGroup()
                .addGap(156, 156, 156)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(120, 120, 120))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCustomerListLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblCompanyName2)
                .addGap(178, 178, 178))
            .addGroup(pnlCustomerListLayout.createSequentialGroup()
                .addGap(148, 148, 148)
                .addComponent(btnLoad, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnDelete)
                .addGap(126, 126, 126))
        );
        pnlCustomerListLayout.setVerticalGroup(
            pnlCustomerListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCustomerListLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(lblCompanyName2)
                .addGap(18, 18, 18)
                .addGroup(pnlCustomerListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(pnlCustomerListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(pnlCustomerListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete)
                    .addComponent(btnLoad))
                .addContainerGap(57, Short.MAX_VALUE))
        );

        tabMain.addTab("Customer List", pnlCustomerList);

        mnuFile.setText("File");

        mniExit.setText("Exit");
        mniExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniExitActionPerformed(evt);
            }
        });
        mnuFile.add(mniExit);

        mnbMain.add(mnuFile);

        mnuOrder.setText("Order");

        mniSubmitOrder.setText("Submit Order");
        mniSubmitOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniSubmitOrderActionPerformed(evt);
            }
        });
        mnuOrder.add(mniSubmitOrder);

        mniReset.setText("Reset");
        mniReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniResetActionPerformed(evt);
            }
        });
        mnuOrder.add(mniReset);

        mnbMain.add(mnuOrder);

        setJMenuBar(mnbMain);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabMain)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabMain)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mniExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniExitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_mniExitActionPerformed

    private void mniSubmitOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniSubmitOrderActionPerformed
        // TODO add your handling code here:
        submitOrder();

    }//GEN-LAST:event_mniSubmitOrderActionPerformed

    private void mniResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniResetActionPerformed
        // TODO add your handling code here:
        reset();
    }//GEN-LAST:event_mniResetActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        // validate the inputs
        reset();

    }//GEN-LAST:event_btnResetActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        // TODO add your handling code here:

        // confirm that a selection was made then move to next tab
        if (rdoGrass.isSelected() == false && rdoGravel.isSelected() == false) {
            JOptionPane.showMessageDialog(this, "Please select the type of yard.",
                    "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            tabMain.setSelectedIndex(1);
        }


    }//GEN-LAST:event_btnNextActionPerformed

    private void rdoGravelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoGravelActionPerformed
        // TODO add your handling code here:
        if (rdoGravel.isSelected()) {
            // find image, create image icon, and set image icon to label
            lblImage.setIcon(new ImageIcon(this.getClass().getResource("gravel1.jpeg")));
        }
    }//GEN-LAST:event_rdoGravelActionPerformed

    private void rdoGrassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoGrassActionPerformed
        // TODO add your handling code here:
        if (rdoGrass.isSelected()) {
            // look in directory where class exists, and get location of "grass.jpg"
            URL location = this.getClass().getResource("grass1.jpg");

            // create image using the location of "grass.jpg"
            ImageIcon icon = new ImageIcon(location);

            // set the image icon to the label
            lblImage.setIcon(icon);
        }

    }//GEN-LAST:event_rdoGrassActionPerformed

    private void btnSubmitOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitOrderActionPerformed
        // TODO add your handling code here:
        submitOrder();
    }//GEN-LAST:event_btnSubmitOrderActionPerformed

    private void btnCalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalculateActionPerformed
        // TODO add your handling code here:
        // validate the inputs
        if (validateInputs() == false) {
            return;      // end the method if validation failed
        }

        // create the Customer object and show the information
        Customer cust = createCustomer();
        txaOrderInfo.setText(cust.getDetails());
    }//GEN-LAST:event_btnCalculateActionPerformed

    private void lstCustomersValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstCustomersValueChanged
        // TODO add your handling code here:
        int index = lstCustomers.getSelectedIndex();

// if something was selected, show the object’s details
        if (index > -1) {
            Customer cust = customerList.getElementAt(index);
            txaCustomerInfo.setText(cust.getDetails());
        }

    }//GEN-LAST:event_lstCustomersValueChanged

    private void btnLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadActionPerformed
        // TODO add your handling code here:
        loadCustomers();
    }//GEN-LAST:event_btnLoadActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        // get the index for the selected item
        try
		{
			// get the selected object
			Customer old = lstCustomers.getSelectedValue();

			// if something is selected, delete it and clear the details textarea
			if (old != null)
			{
				DataIO data = new DataIO();
				data.delete(old.getCustomerID());   // get the name only
				txaCustomerInfo.setText("");
				loadCustomers();
			}
		}
		catch (SQLException ex)
		{
			JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage(),
                    "Database Error", JOptionPane.ERROR_MESSAGE);
		}


    }//GEN-LAST:event_btnDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(landscapeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(landscapeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(landscapeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(landscapeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new landscapeGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btgYardType;
    private javax.swing.JButton btnCalculate;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnLoad;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSubmitOrder;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblCompanyName;
    private javax.swing.JLabel lblCompanyName1;
    private javax.swing.JLabel lblCompanyName2;
    private javax.swing.JLabel lblGrassCost;
    private javax.swing.JLabel lblGravelCost;
    private javax.swing.JLabel lblImage;
    private javax.swing.JLabel lblInstruction1;
    private javax.swing.JLabel lblInstruction2;
    private javax.swing.JLabel lblInstruction3;
    private javax.swing.JLabel lblLength;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblOrderSummary;
    private javax.swing.JLabel lblWidth;
    private javax.swing.JList<Customer> lstCustomers;
    private javax.swing.JMenuBar mnbMain;
    private javax.swing.JMenuItem mniExit;
    private javax.swing.JMenuItem mniReset;
    private javax.swing.JMenuItem mniSubmitOrder;
    private javax.swing.JMenu mnuFile;
    private javax.swing.JMenu mnuOrder;
    private javax.swing.JPanel pnlCustomerList;
    private javax.swing.JPanel pnlInformation;
    private javax.swing.JPanel pnlWelcome;
    private javax.swing.JRadioButton rdoGrass;
    private javax.swing.JRadioButton rdoGravel;
    private javax.swing.JScrollPane scrOrderSummary;
    private javax.swing.JTabbedPane tabMain;
    private javax.swing.JTextArea txaCustomerInfo;
    private javax.swing.JTextArea txaOrderInfo;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtLength;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtWidth;
    // End of variables declaration//GEN-END:variables

    private void reset() {
        // clear the radiobutton selection
        btgYardType.clearSelection();

        // put the image back to "Dirt"
        lblImage.setIcon(new ImageIcon(this.getClass().getResource("dirt1.png")));
        txtName.setText("");
        this.txtName.requestFocusInWindow();
        txtAddress.setText("");
        txtLength.setText("");
        txtWidth.setText("");
        txaOrderInfo.setText("");

    }

    private boolean validateInputs() {
        // get inputs from user using the textboxes
        String sName = txtName.getText();
        String sAddress = txtAddress.getText();
        String sWidth = txtWidth.getText();
        String sLength = txtLength.getText();

        // confirm that a radiobutton has been selected
        if (btgYardType.getSelection() == null) {
            JOptionPane.showMessageDialog(this,
                    "Error. Please select the type of yard.",
                    "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        // make sure we have a name for the order
        if (sName.isBlank()) {
            JOptionPane.showMessageDialog(this, "Enter a Name",
                    "Name Error", JOptionPane.ERROR_MESSAGE);
            txtName.requestFocusInWindow();
            return false;
        }

        // make sure we have an address for the order
        if (sAddress.isBlank()) {
            JOptionPane.showMessageDialog(this, "Enter a Address",
                    "Address Error", JOptionPane.ERROR_MESSAGE);
            txtAddress.requestFocusInWindow();
            return false;
        }

        if (sAddress.length() < 6) {
            JOptionPane.showMessageDialog(this, "Address must be six characters or more.",
                    "Address Error", JOptionPane.ERROR_MESSAGE);
            txtAddress.requestFocusInWindow();
            return false;
        }

        if (sWidth.isBlank()) {
            JOptionPane.showMessageDialog(this, "Enter a Width",
                    "Width Error", JOptionPane.ERROR_MESSAGE);
            txtWidth.requestFocusInWindow();
            return false;
        }

        // check to see if the width is a valid number
        try {
            Double.parseDouble(sWidth);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Width must be a number",
                    "Width Error", JOptionPane.ERROR_MESSAGE);
            txtWidth.setText("");
            txtWidth.requestFocusInWindow();
            return false;
        }

        if (Double.parseDouble(sWidth) <= 0) {
            JOptionPane.showMessageDialog(this, "Width must be greater than 0",
                    "Width Error", JOptionPane.ERROR_MESSAGE);
            txtLength.setText("");
            txtLength.requestFocusInWindow();
            return false;
        }

        if (sLength.isBlank()) {
            JOptionPane.showMessageDialog(this, "Enter a Length",
                    "Length Error", JOptionPane.ERROR_MESSAGE);
            txtLength.requestFocusInWindow();
            return false;
        }

        try {
            Double.parseDouble(sLength);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Length must be a number",
                    "Length Error", JOptionPane.ERROR_MESSAGE);
            txtLength.setText("");
            txtLength.requestFocusInWindow();
            return false;
        }

        if (Double.parseDouble(sLength) <= 0) {
            JOptionPane.showMessageDialog(this,
                    "Length must be must be greater than 0",
                    "Length Error", JOptionPane.ERROR_MESSAGE);
            txtLength.setText("");
            txtLength.requestFocusInWindow();
            return false;
        }

        // all is good so return true
        return true;

    }

    private Customer createCustomer() {
        String name = txtName.getText();
        String address = txtAddress.getText();
        double width = Double.parseDouble(txtWidth.getText());
        double length = Double.parseDouble(txtLength.getText());
        String yardType = "";
        double totalCost = 0.0;

        if (rdoGrass.isSelected()) {
            yardType = "Grass";
            totalCost = GRASS_PER_SQFT * width * length;
        } else if (rdoGravel.isSelected()) {
            yardType = "Gravel";
            totalCost = GRAVEL_PER_SQFT * width * length;
        } else {
            JOptionPane.showMessageDialog(this,
                    "Error. Please select a yard type.");
            totalCost = 0.0;
        }

        Customer cust = new Customer(0, name, address, yardType,
                length, width, totalCost);
        return cust;

    }

    private void submitOrder()
{
	if (validateInputs() == false)
	{
		return;    // end the method if validation failed
	}

	Customer cust = createCustomer();
	customerList.addElement(cust);
	txaOrderInfo.setText(cust.getDetails());

	try
	{
		DataIO data = new DataIO(); // create DataIO object
		data.add(cust);
		loadCustomers();  // load all customers

		// reset for the next customer
		reset();

		//move to the client orders tab
		tabMain.setSelectedIndex(2);
	}
	catch (SQLException ex)
	{
		JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage(),
			"Database Error", JOptionPane.ERROR_MESSAGE);
	}
	catch (ClassNotFoundException ex)
	{
		JOptionPane.showMessageDialog(this, "Driver Not Found Error: " + ex.getMessage(),
			"Database Driver Error", JOptionPane.ERROR_MESSAGE);
	}

	
}



    private void loadCustomers()
{
			try
			{
				DataIO data = new DataIO(); // create DataIO object
				ArrayList<Customer> customers = data.getList();

				// clear out the DefaultListModel and textarea
				customerList.clear();
				txaOrderInfo.setText("");

				// copy each object from the ArrayList over to the DefaultListModel
				for (int i = 0; i < customers.size(); i++)
				{
					customerList.addElement(customers.get(i));
				}
			}
			catch (SQLException ex)
			{
				JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage(),
                    "Database Error", JOptionPane.ERROR_MESSAGE);
			}
		}

}
